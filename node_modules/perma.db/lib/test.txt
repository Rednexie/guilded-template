minimize: true,
memory: true,
preload: true, // if minimize && all, get the full db to cache. 
readonly: true
strict: true // makes extra operations to return a better result, such as existsSync with deleteSync to return either true or false


check returns
cache integration
db.deleteAll([1, 2, 3]).then(data => console.log(data))
number and array methods, more sqlite functions
object functions, db.get("object.prop")




set, get, has, delete, type, all, deleteall, deletedb, backup, query


single db

















base64 implementation
array implementation
object implementation











Quick.db is a Node.js database package that allows you to store and access data easily. It has several functions that you can use to manipulate the data, such as:

- `db.set(key, value)` - Sets a value in the database with a specified key. Returns the value that was set.
- `db.get(key)` - Gets a value from the database with a specified key. Returns the value or `null` if not found.
- `db.add(key, number)` - Adds a number to a value in the database with a specified key. Returns the new value or creates one if not found.
- `db.subtract(key, number)` - Subtracts a number from a value in the database with a specified key. Returns the new value or creates one if not found.
- `db.push(key, element)` - Pushes an element to an array in the database with a specified key. Returns the new array or creates one if not found.
- `db.pop(key, element)` - Pops an element from an array in the database with a specified key. Returns the popped element or `null` if not found.
- `db.delete(key)` - Deletes a value from the database with a specified key. Returns `true` if deleted or `false` if not found.
- `db.has(key)` - Checks if the database has a value with a specified key. Returns `true` or `false`.
- `db.fetch(key)` - Alias for `db.get(key)`.
- `db.fetchAll()` - Fetches all the data from the database. Returns an array of objects with keys and values.
- `db.all()` - Alias for `db.fetchAll()`.
- `db.startsWith(prefix)` - Fetches all the data from the database that starts with a specified prefix. Returns an array of objects with keys and values.
- `db.endsWith(suffix)` - Fetches all the data from the database that ends with a specified suffix. Returns an array of objects with keys and values.
- `db.math(key, operation, number)` - Performs a mathematical operation on a value in the database with a specified key. Returns the new value or creates one if not found. The operation can be one of: '+', '-', '*', '/', '%', '^'.
- `db.setProp(key, object)` - Sets a property of an object in the database with a specified key. Returns the new object or creates one if not found.
- `db.getProp(key, prop)` - Gets a property of an object in the database with a specified key. Returns the property value or `null` if not found.

You can find more information and examples on how to use these functions on [quick.db documentation](^1^) or [quick.db GitHub repository](^2^).

Kaynak: Bing ile konu≈üma, 9/6/2023
(1) quick.db - npm. https://www.npmjs.com/package/quick.db.
(2) plexidev/quick.db - GitHub. https://github.com/plexidev/quick.db.
(3) quick.db - npm. https://www.npmjs.com/package/quick.db/v/7.1.3.
(4) quick.db JavaScript and Node.js code examples | Tabnine. https://www.tabnine.com/code/javascript/modules/quick.db.