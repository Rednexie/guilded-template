"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocEventHandler = void 0;
const constants_1 = require("../../constants");
const GatewayEventHandler_1 = require("./GatewayEventHandler");
class DocEventHandler extends GatewayEventHandler_1.GatewayEventHandler {
    docCreated(data) {
        const existingChannel = this.client.channels.cache.get(data.d.doc.channelId);
        if (existingChannel)
            existingChannel.docs.set(data.d.doc.id, data.d.doc);
        return this.client.emit(constants_1.constants.clientEvents.DOC_CREATED, data.d.doc);
    }
    docUpdated(data) {
        const existingChannel = this.client.channels.cache.get(data.d.doc.channelId);
        const existingDoc = existingChannel === null || existingChannel === void 0 ? void 0 : existingChannel.docs.get(data.d.doc.id);
        if (existingChannel)
            existingChannel.docs.set(data.d.doc.id, data.d.doc);
        return this.client.emit(constants_1.constants.clientEvents.DOC_UPDATED, data.d.doc, existingDoc !== null && existingDoc !== void 0 ? existingDoc : null);
    }
    docDeleted(data) {
        const existingChannel = this.client.channels.cache.get(data.d.doc.channelId);
        if (existingChannel)
            existingChannel.docs.set(data.d.doc.id, data.d.doc);
        return this.client.emit(constants_1.constants.clientEvents.DOC_DELETED, data.d.doc);
    }
}
exports.DocEventHandler = DocEventHandler;
//# sourceMappingURL=DocEventHandler.js.map