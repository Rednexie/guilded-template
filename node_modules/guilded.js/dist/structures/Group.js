"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Group = void 0;
const Base_1 = require("./Base");
/**
 * A group in a server in Guilded
 */
class Group extends Base_1.Base {
    constructor(client, data) {
        super(client, data);
        this.serverId = data.serverId;
        this.createdAt = new Date(Date.parse(data.createdAt));
        this.createdBy = data.createdBy;
        this._update(data);
    }
    _update(data) {
        if (typeof data.name !== "undefined")
            this.name = data.name;
        if (typeof data.description !== "undefined")
            this.description = data.description;
        if (typeof data.updatedAt !== "undefined")
            this.updatedAt = new Date(Date.parse(data.updatedAt));
        if (typeof data.avatar !== "undefined")
            this.avatar = data.avatar;
        if (typeof data.isHome !== "undefined")
            this.isHome = data.isHome;
        if (typeof data.emoteId !== "undefined")
            this.emoteId = data.emoteId;
        if (typeof data.isPublic !== "undefined")
            this.isPublic = data.isPublic;
        if (typeof data.updatedBy !== "undefined")
            this.updatedBy = data.updatedBy;
        if (typeof data.archivedAt !== "undefined")
            this.archivedAt = data.archivedAt ? new Date(Date.parse(data.archivedAt)) : null;
        if (typeof data.archivedBy !== "undefined")
            this.archivedBy = data.archivedBy;
        return this;
    }
    /**
     * Adds a member to the group.
     *
     * @param memberId The ID of the member to add.
     * @returns A Promise that resolves with no result on success.
     */
    addMember(memberId) {
        return this.client.groups.addMember(this.id, memberId);
    }
    /**
     * Removes a member from the group.
     *
     * @param memberId The ID of the member to remove.
     * @returns A Promise that resolves with no result on success.
     */
    removeMember(memberId) {
        return this.client.groups.removeMember(this.id, memberId);
    }
}
exports.Group = Group;
//# sourceMappingURL=Group.js.map