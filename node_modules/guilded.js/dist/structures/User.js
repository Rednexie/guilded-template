"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserType = exports.ClientUser = exports.User = void 0;
const util_1 = require("../util");
const Base_1 = require("./Base");
class User extends Base_1.Base {
    constructor(client, data) {
        super(client, data);
        /** The avatar image associated with this user */
        this.avatar = null;
        /** The banner image associated with this user */
        this.banner = null;
        this.name = data.name;
        this._createdAt = (0, util_1.parseToStamp)(data.createdAt);
        this.type = data.type === "bot" ? UserType.Bot : UserType.User;
        this._update(data);
    }
    get createdAt() {
        return this._createdAt ? new Date(this._createdAt) : null;
    }
    _update(data) {
        var _a, _b;
        if ("avatar" in data) {
            this.avatar = (_a = data.avatar) !== null && _a !== void 0 ? _a : null;
        }
        if ("banner" in data) {
            this.banner = (_b = data.banner) !== null && _b !== void 0 ? _b : null;
        }
        return this;
    }
}
exports.User = User;
class ClientUser extends User {
    constructor(client, data) {
        super(client, Object.assign(Object.assign({}, data), { type: "bot" }));
        this.createdBy = data.createdBy;
        this.botId = data.botId;
    }
    fetch() {
        return this.client.users.fetchClient();
    }
}
exports.ClientUser = ClientUser;
var UserType;
(function (UserType) {
    UserType[UserType["Bot"] = 0] = "Bot";
    UserType[UserType["User"] = 1] = "User";
})(UserType = exports.UserType || (exports.UserType = {}));
//# sourceMappingURL=User.js.map