"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocChannel = void 0;
const collection_1 = require("@discordjs/collection");
const Channel_1 = require("./Channel");
/**
 * Represents a doc channel on Guilded
 *
 * @extends Channel
 */
class DocChannel extends Channel_1.Channel {
    constructor() {
        super(...arguments);
        /**
         * The docs in this channel.
         */
        this.docs = new collection_1.Collection();
    }
    /**
     * Create a new doc in this channel.
     *
     * @param options - The options for creating the doc.
     * @returns A promise that resolves with the created doc.
     */
    createDoc(options) {
        return this.client.docs.create(this.id, options);
    }
    /**
     * Get all the docs from this channel.
     *
     * @returns A promise that resolves with an array of all docs.
     */
    getDocs() {
        return this.client.docs.fetchMany(this.id);
    }
    /**
     * Get a specific doc from this channel.
     *
     * @param docId - The ID ofDocPayload the doc to fetch.
     * @returns A promise that resolves with the fetched doc.
     */
    getDoc(docId) {
        return this.client.docs.fetch(this.id, docId);
    }
    /**
     * Update a specific doc in this channel.
     *
     * @param docId - The ID of the doc to update.
     * @param options - The options for updating the doc.
     * @returns A promise that resolves with the updated doc.
     */
    updateDoc(docId, options) {
        return this.client.docs.update(this.id, docId, options);
    }
    /**
     * Delete a specific doc from this channel.
     *
     * @param docId - The ID of the doc to delete.
     * @returns A promise that resolves with no data.
     */
    deleteDoc(docId) {
        return this.client.docs.delete(this.id, docId);
    }
}
exports.DocChannel = DocChannel;
//# sourceMappingURL=DocChannel.js.map