import type { ChatEmbedPayload, EmbedPayload } from "@guildedjs/api";
export declare class Embed {
    title: string | null;
    description: string | null;
    url: string | null;
    timestamp: number | null;
    color: number | null;
    image: APIEmbedMediaData | null;
    thumbnail: APIEmbedMediaData | null;
    video: APIEmbedMediaData | null;
    author: {
        name: string | null;
        iconURL: string | null;
        url: string | null;
    } | null;
    fields: {
        inline: boolean | null;
        name: string;
        value: string;
    }[];
    footer: {
        text: string;
        iconURL: string | null;
    } | null;
    private timestampString;
    constructor(data?: Partial<ChatEmbedPayload>);
    _update(data: Partial<ChatEmbedPayload>): void;
    setTitle(title?: string | null): this;
    setDescription(description?: string | null): this;
    setURL(url?: string | null): this;
    setTimestamp(timestamp?: Date | number | string | null): this;
    setColor(color?: number | string | [number, number, number] | null): this;
    setFooter(text?: string, iconURL?: string | null): this;
    setImage(url?: string): this;
    setThumbnail(url?: string): this;
    setAuthor(name?: string, iconURL?: string | null, url?: string | null): this;
    addFields(fields: {
        name: string;
        value: string;
        inline?: boolean;
    }[]): this;
    addField(name: string, value: string, inline?: boolean): this;
    clearFields(): this;
    toJSON(): EmbedPayload;
}
export type APIEmbedMediaData = {
    url: string;
};
//# sourceMappingURL=Embed.d.ts.map