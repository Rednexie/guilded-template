import { Collection } from "@discordjs/collection";
export type CacheStructure<K, V> = {
    get(key: K): Promise<V> | V;
    set(key: K, value: V): Promise<void> | void;
    delete(key: K): Promise<void> | void;
};
/**
 * A collection with a max cap size, which will remove a random element
 */
export declare class CacheCollection<K, V> extends Collection<K, V> {
    maxSize: number;
    constructor(options?: {
        maxSize?: number;
    }, entries?: readonly (readonly [K, V])[] | null | undefined);
    set(...args: Parameters<(typeof Collection.prototype)["set"]>): this;
}
export declare function inMemoryCacheBuilder<K, T>(_structName: string, _struct: T): CacheCollection<K, T>;
//# sourceMappingURL=cache.d.ts.map