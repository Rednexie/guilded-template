import type { APIContent, APIEmbed, RESTPostWebhookResult } from "../../generated/api-typings";
import { type parsedMessage, type MessageAttachment, type WebhookMessageContent } from "../util/message";
import type { WebhookEmbed } from "./WebhookEmbed";
export declare class WebhookClient {
    URL: string;
    id: string;
    token: string;
    username: string | null;
    avatarURL: string | null;
    private readonly rest;
    constructor(webhookConnection: string | {
        id: string;
        token: string;
    }, { username, avatarURL }?: {
        avatarURL?: string;
        username?: string;
    });
    send(content: WebhookMessageContent, embeds?: (APIEmbed | WebhookEmbed)[], options?: {
        avatarURL?: string;
        files?: MessageAttachment[];
        username?: string;
    }): Promise<WebhookExecuteResponse>;
}
export type WebhookExecuteResponse = Omit<RESTPostWebhookResult, "content"> & {
    content: string;
    parsedContent: parsedMessage;
    rawContent: APIContent;
};
//# sourceMappingURL=WebhookClient.d.ts.map