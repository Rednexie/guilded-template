import type { DocComment } from "../models/DocComment";
import type { CancelablePromise } from "../core/CancelablePromise";
import type { BaseHttpRequest } from "../core/BaseHttpRequest";
export declare class DocCommentsService {
    readonly httpRequest: BaseHttpRequest;
    constructor(httpRequest: BaseHttpRequest);
    /**
     * Create a comment on a doc
     * @returns any Success
     * @throws ApiError
     */
    docCommentCreate({ channelId, docId, requestBody, }: {
        channelId: string;
        docId: number;
        requestBody: {
            /**
             * The content of the doc comment
             */
            content: string;
        };
    }): CancelablePromise<{
        docComment: DocComment;
    }>;
    /**
     * Get a doc's comments
     * @returns any Success
     * @throws ApiError
     */
    docCommentReadMany({ channelId, docId }: {
        channelId: string;
        docId: number;
    }): CancelablePromise<{
        docComments: Array<DocComment>;
    }>;
    /**
     * Get a comment on a doc
     * @returns any Success
     * @throws ApiError
     */
    docCommentRead({ channelId, docId, docCommentId }: {
        channelId: string;
        docId: number;
        docCommentId: number;
    }): CancelablePromise<{
        docComment: DocComment;
    }>;
    /**
     * Update a doc comment
     * @returns any Success
     * @throws ApiError
     */
    docCommentUpdate({ channelId, docId, docCommentId, requestBody, }: {
        channelId: string;
        docId: number;
        docCommentId: number;
        requestBody: {
            /**
             * The content of the doc comment
             */
            content: string;
        };
    }): CancelablePromise<{
        docComment: DocComment;
    }>;
    /**
     * Delete a doc comment
     * @returns void
     * @throws ApiError
     */
    docCommentDelete({ channelId, docId, docCommentId }: {
        channelId: string;
        docId: number;
        docCommentId: number;
    }): CancelablePromise<void>;
}
//# sourceMappingURL=DocCommentsService.d.ts.map