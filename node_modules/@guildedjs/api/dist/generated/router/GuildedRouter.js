"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GuildedRouter = void 0;
const FetchHttpRequest_1 = require("./core/FetchHttpRequest");
const AnnouncementCommentsService_1 = require("./services/AnnouncementCommentsService");
const AnnouncementsService_1 = require("./services/AnnouncementsService");
const CalendarEventCommentsService_1 = require("./services/CalendarEventCommentsService");
const CalendarEventsService_1 = require("./services/CalendarEventsService");
const CalendarEventSeriesService_1 = require("./services/CalendarEventSeriesService");
const ChannelsService_1 = require("./services/ChannelsService");
const ChatService_1 = require("./services/ChatService");
const DocCommentsService_1 = require("./services/DocCommentsService");
const DocsService_1 = require("./services/DocsService");
const ForumCommentsService_1 = require("./services/ForumCommentsService");
const ForumsService_1 = require("./services/ForumsService");
const GroupMembershipService_1 = require("./services/GroupMembershipService");
const GroupsService_1 = require("./services/GroupsService");
const ListItemsService_1 = require("./services/ListItemsService");
const MemberBansService_1 = require("./services/MemberBansService");
const MembersService_1 = require("./services/MembersService");
const ReactionsService_1 = require("./services/ReactionsService");
const RoleMembershipService_1 = require("./services/RoleMembershipService");
const RolesService_1 = require("./services/RolesService");
const ServersService_1 = require("./services/ServersService");
const ServerXpService_1 = require("./services/ServerXpService");
const SocialLinksService_1 = require("./services/SocialLinksService");
const UsersService_1 = require("./services/UsersService");
const UserStatusService_1 = require("./services/UserStatusService");
const WebhookService_1 = require("./services/WebhookService");
const ServerSubscriptionService_1 = require("./services/ServerSubscriptionService");
const CategoriesService_1 = require("./services/CategoriesService");
class GuildedRouter {
    constructor(rest) {
        this.request = new FetchHttpRequest_1.FetchHttpRequest(rest);
        this.announcementComments = new AnnouncementCommentsService_1.AnnouncementCommentsService(this.request);
        this.announcements = new AnnouncementsService_1.AnnouncementsService(this.request);
        this.calendarEventComments = new CalendarEventCommentsService_1.CalendarEventCommentsService(this.request);
        this.calendarEvents = new CalendarEventsService_1.CalendarEventsService(this.request);
        this.calendarEventSeries = new CalendarEventSeriesService_1.CalendarEventSeriesService(this.request);
        this.categories = new CategoriesService_1.CategoriesService(this.request);
        this.channels = new ChannelsService_1.ChannelsService(this.request);
        this.chat = new ChatService_1.ChatService(this.request);
        this.docComments = new DocCommentsService_1.DocCommentsService(this.request);
        this.docs = new DocsService_1.DocsService(this.request);
        this.forumComments = new ForumCommentsService_1.ForumCommentsService(this.request);
        this.forums = new ForumsService_1.ForumsService(this.request);
        this.groupMembership = new GroupMembershipService_1.GroupMembershipService(this.request);
        this.groups = new GroupsService_1.GroupsService(this.request);
        this.listItems = new ListItemsService_1.ListItemsService(this.request);
        this.memberBans = new MemberBansService_1.MemberBansService(this.request);
        this.members = new MembersService_1.MembersService(this.request);
        this.reactions = new ReactionsService_1.ReactionsService(this.request);
        this.roleMembership = new RoleMembershipService_1.RoleMembershipService(this.request);
        this.roles = new RolesService_1.RolesService(this.request);
        this.servers = new ServersService_1.ServersService(this.request);
        this.serverXp = new ServerXpService_1.ServerXpService(this.request);
        this.socialLinks = new SocialLinksService_1.SocialLinksService(this.request);
        this.users = new UsersService_1.UsersService(this.request);
        this.userStatus = new UserStatusService_1.UserStatusService(this.request);
        this.webhook = new WebhookService_1.WebhookService(this.request);
        this.serverSubscriptions = new ServerSubscriptionService_1.ServerSubscriptionService(this.request);
    }
}
exports.GuildedRouter = GuildedRouter;
//# sourceMappingURL=GuildedRouter.js.map