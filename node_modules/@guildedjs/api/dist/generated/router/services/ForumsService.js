"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ForumsService = void 0;
class ForumsService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Create a topic in a forum
     * @returns any Success
     * @throws ApiError
     */
    forumTopicCreate({ channelId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/channels/{channelId}/topics",
            path: {
                channelId: channelId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Get forum topics
     * @returns any Success
     * @throws ApiError
     */
    forumTopicReadMany({ channelId, before, limit = 25 }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/channels/{channelId}/topics",
            path: {
                channelId: channelId,
            },
            query: {
                before: before,
                limit: limit,
            },
        });
    }
    /**
     * Get a forum topic
     * @returns any Success
     * @throws ApiError
     */
    forumTopicRead({ channelId, forumTopicId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/channels/{channelId}/topics/{forumTopicId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
        });
    }
    /**
     * Update a forum topic
     * @returns any Success
     * @throws ApiError
     */
    forumTopicUpdate({ channelId, forumTopicId, requestBody, }) {
        return this.httpRequest.request({
            method: "PATCH",
            url: "/channels/{channelId}/topics/{forumTopicId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Delete a forum topic
     * @returns void
     * @throws ApiError
     */
    forumTopicDelete({ channelId, forumTopicId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/topics/{forumTopicId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
        });
    }
    /**
     * Pin a forum topic
     * @returns void
     * @throws ApiError
     */
    forumTopicPin({ channelId, forumTopicId }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/topics/{forumTopicId}/pin",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
        });
    }
    /**
     * Unpin a forum topic
     * @returns void
     * @throws ApiError
     */
    forumTopicUnpin({ channelId, forumTopicId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/topics/{forumTopicId}/pin",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
        });
    }
    /**
     * Lock a forum topic
     * @returns void
     * @throws ApiError
     */
    forumTopicLock({ channelId, forumTopicId }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/topics/{forumTopicId}/lock",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
        });
    }
    /**
     * Unlock a forum topic
     * @returns void
     * @throws ApiError
     */
    forumTopicUnlock({ channelId, forumTopicId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/topics/{forumTopicId}/lock",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
            },
        });
    }
}
exports.ForumsService = ForumsService;
//# sourceMappingURL=ForumsService.js.map