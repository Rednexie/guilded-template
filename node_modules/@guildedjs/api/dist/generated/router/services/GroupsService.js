"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupsService = void 0;
class GroupsService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Create a group
     * Note: only 100 unarchived groups can exist on a server at any time
     * @returns any Success
     * @throws ApiError
     */
    groupCreate({ serverId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/servers/{serverId}/groups",
            path: {
                serverId: serverId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Get groups
     * @returns any Success
     * @throws ApiError
     */
    groupReadMany({ serverId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/servers/{serverId}/groups",
            path: {
                serverId: serverId,
            },
        });
    }
    /**
     * Get a group
     * @returns any Success
     * @throws ApiError
     */
    groupRead({ serverId, groupId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/servers/{serverId}/groups/{groupId}",
            path: {
                serverId: serverId,
                groupId: groupId,
            },
        });
    }
    /**
     * Update a group
     * @returns any Success
     * @throws ApiError
     */
    groupUpdate({ serverId, groupId, requestBody, }) {
        return this.httpRequest.request({
            method: "PATCH",
            url: "/servers/{serverId}/groups/{groupId}",
            path: {
                serverId: serverId,
                groupId: groupId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Delete a group
     * Note: you cannot delete the home group
     * @returns void
     * @throws ApiError
     */
    groupDelete({ serverId, groupId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/servers/{serverId}/groups/{groupId}",
            path: {
                serverId: serverId,
                groupId: groupId,
            },
        });
    }
}
exports.GroupsService = GroupsService;
//# sourceMappingURL=GroupsService.js.map