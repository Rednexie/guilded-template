"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReactionsService = void 0;
class ReactionsService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Create forum topic reaction
     * @returns void
     * @throws ApiError
     */
    forumTopicReactionCreate({ channelId, forumTopicId, emoteId, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/topics/{forumTopicId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete forum topic reaction
     * @returns void
     * @throws ApiError
     */
    forumTopicReactionDelete({ channelId, forumTopicId, emoteId, }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/topics/{forumTopicId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create forum topic comment reaction
     * @returns void
     * @throws ApiError
     */
    forumTopicCommentReactionCreate({ channelId, forumTopicId, forumTopicCommentId, emoteId, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/topics/{forumTopicId}/comments/{forumTopicCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
                forumTopicCommentId: forumTopicCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete forum topic comment reaction
     * @returns void
     * @throws ApiError
     */
    forumTopicCommentReactionDelete({ channelId, forumTopicId, forumTopicCommentId, emoteId, }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/topics/{forumTopicId}/comments/{forumTopicCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                forumTopicId: forumTopicId,
                forumTopicCommentId: forumTopicCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create calendar event reaction
     * @returns void
     * @throws ApiError
     */
    calendarEventReactionCreate({ channelId, calendarEventId, emoteId }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/events/{calendarEventId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                calendarEventId: calendarEventId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete calendar event reaction
     * @returns void
     * @throws ApiError
     */
    calendarEventReactionDelete({ channelId, calendarEventId, emoteId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/events/{calendarEventId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                calendarEventId: calendarEventId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create calendar event comment reaction
     * @returns void
     * @throws ApiError
     */
    calendarEventCommentReactionCreate({ channelId, calendarEventId, calendarEventCommentId, emoteId, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/events/{calendarEventId}/comments/{calendarEventCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                calendarEventId: calendarEventId,
                calendarEventCommentId: calendarEventCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete calendar event comment reaction
     * @returns void
     * @throws ApiError
     */
    calendarEventCommentReactionDelete({ channelId, calendarEventId, calendarEventCommentId, emoteId, }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/events/{calendarEventId}/comments/{calendarEventCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                calendarEventId: calendarEventId,
                calendarEventCommentId: calendarEventCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create doc reaction
     * @returns void
     * @throws ApiError
     */
    docReactionCreate({ channelId, docId, emoteId }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/docs/{docId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                docId: docId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete doc reaction
     * @returns void
     * @throws ApiError
     */
    docReactionDelete({ channelId, docId, emoteId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/docs/{docId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                docId: docId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create doc comment reaction
     * @returns void
     * @throws ApiError
     */
    docCommentReactionCreate({ channelId, docId, docCommentId, emoteId }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/docs/{docId}/comments/{docCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                docId: docId,
                docCommentId: docCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete doc comment reaction
     * @returns void
     * @throws ApiError
     */
    docCommentReactionDelete({ channelId, docId, docCommentId, emoteId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/docs/{docId}/comments/{docCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                docId: docId,
                docCommentId: docCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create announcement reaction
     * @returns void
     * @throws ApiError
     */
    announcementReactionCreate({ channelId, announcementId, emoteId, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/announcements/{announcementId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                announcementId: announcementId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete announcement reaction
     * @returns void
     * @throws ApiError
     */
    announcementReactionDelete({ channelId, announcementId, emoteId, }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/announcements/{announcementId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                announcementId: announcementId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create an announcement comment reaction
     * @returns void
     * @throws ApiError
     */
    announcementCommentReactionCreate({ channelId, announcementId, announcementCommentId, emoteId, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/announcements/{announcementId}/comments/{announcementCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                announcementId: announcementId,
                announcementCommentId: announcementCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete an announcement comment reaction
     * @returns void
     * @throws ApiError
     */
    announcementCommentReactionDelete({ channelId, announcementId, announcementCommentId, emoteId, }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/announcements/{announcementId}/comments/{announcementCommentId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                announcementId: announcementId,
                announcementCommentId: announcementCommentId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Create a message reaction
     * @returns void
     * @throws ApiError
     */
    channelMessageReactionCreate({ channelId, messageId, emoteId }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/channels/{channelId}/messages/{messageId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                messageId: messageId,
                emoteId: emoteId,
            },
        });
    }
    /**
     * Delete a message reaction
     * @returns void
     * @throws ApiError
     */
    channelMessageReactionDelete({ channelId, messageId, emoteId, userId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/messages/{messageId}/emotes/{emoteId}",
            path: {
                channelId: channelId,
                messageId: messageId,
                emoteId: emoteId,
            },
            query: {
                userId: userId,
            },
        });
    }
    /**
     * Bulk delete a message's reactions
     * @returns void
     * @throws ApiError
     */
    channelMessageReactionDeleteMany({ channelId, messageId, emoteId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/messages/{messageId}/emotes",
            path: {
                channelId: channelId,
                messageId: messageId,
            },
            query: {
                emoteId: emoteId,
            },
        });
    }
}
exports.ReactionsService = ReactionsService;
//# sourceMappingURL=ReactionsService.js.map