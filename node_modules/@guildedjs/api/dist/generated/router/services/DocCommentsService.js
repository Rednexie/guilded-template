"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocCommentsService = void 0;
class DocCommentsService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Create a comment on a doc
     * @returns any Success
     * @throws ApiError
     */
    docCommentCreate({ channelId, docId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/channels/{channelId}/docs/{docId}/comments",
            path: {
                channelId: channelId,
                docId: docId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Get a doc's comments
     * @returns any Success
     * @throws ApiError
     */
    docCommentReadMany({ channelId, docId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/channels/{channelId}/docs/{docId}/comments",
            path: {
                channelId: channelId,
                docId: docId,
            },
        });
    }
    /**
     * Get a comment on a doc
     * @returns any Success
     * @throws ApiError
     */
    docCommentRead({ channelId, docId, docCommentId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/channels/{channelId}/docs/{docId}/comments/{docCommentId}",
            path: {
                channelId: channelId,
                docId: docId,
                docCommentId: docCommentId,
            },
        });
    }
    /**
     * Update a doc comment
     * @returns any Success
     * @throws ApiError
     */
    docCommentUpdate({ channelId, docId, docCommentId, requestBody, }) {
        return this.httpRequest.request({
            method: "PATCH",
            url: "/channels/{channelId}/docs/{docId}/comments/{docCommentId}",
            path: {
                channelId: channelId,
                docId: docId,
                docCommentId: docCommentId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Delete a doc comment
     * @returns void
     * @throws ApiError
     */
    docCommentDelete({ channelId, docId, docCommentId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/channels/{channelId}/docs/{docId}/comments/{docCommentId}",
            path: {
                channelId: channelId,
                docId: docId,
                docCommentId: docCommentId,
            },
        });
    }
}
exports.DocCommentsService = DocCommentsService;
//# sourceMappingURL=DocCommentsService.js.map