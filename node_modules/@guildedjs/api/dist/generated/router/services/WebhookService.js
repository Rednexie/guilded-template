"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookService = void 0;
class WebhookService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Create a webhook
     * @returns any Success
     * @throws ApiError
     */
    webhookCreate({ serverId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/servers/{serverId}/webhooks",
            path: {
                serverId: serverId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Get a server's webhooks
     * Get a list of webhooks from a server.
     * @returns any Success
     * @throws ApiError
     */
    webhookReadMany({ serverId, channelId, }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/servers/{serverId}/webhooks",
            path: {
                serverId: serverId,
            },
            query: {
                channelId: channelId,
            },
        });
    }
    /**
     * Get a server's webhook
     * @returns any Success
     * @throws ApiError
     */
    webhookRead({ serverId, webhookId }) {
        return this.httpRequest.request({
            method: "GET",
            url: "/servers/{serverId}/webhooks/{webhookId}",
            path: {
                serverId: serverId,
                webhookId: webhookId,
            },
        });
    }
    /**
     * Update a webhook
     * @returns any Success
     * @throws ApiError
     */
    webhookUpdate({ serverId, webhookId, requestBody, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/servers/{serverId}/webhooks/{webhookId}",
            path: {
                serverId: serverId,
                webhookId: webhookId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Delete a server webhook
     * @returns void
     * @throws ApiError
     */
    webhookDelete({ serverId, webhookId }) {
        return this.httpRequest.request({
            method: "DELETE",
            url: "/servers/{serverId}/webhooks/{webhookId}",
            path: {
                serverId: serverId,
                webhookId: webhookId,
            },
        });
    }
}
exports.WebhookService = WebhookService;
//# sourceMappingURL=WebhookService.js.map