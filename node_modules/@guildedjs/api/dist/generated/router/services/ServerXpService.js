"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerXpService = void 0;
class ServerXpService {
    constructor(httpRequest) {
        this.httpRequest = httpRequest;
    }
    /**
     * Award XP to a member
     * @returns any Success
     * @throws ApiError
     */
    serverXpForUserCreate({ serverId, userId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/servers/{serverId}/members/{userId}/xp",
            path: {
                serverId: serverId,
                userId: userId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Set a member's XP
     * @returns any Success
     * @throws ApiError
     */
    serverXpForUserUpdate({ serverId, userId, requestBody, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/servers/{serverId}/members/{userId}/xp",
            path: {
                serverId: serverId,
                userId: userId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Bulk award XP to members
     * Take note of the max number of `userIds` that can be submitted on each request. If you require more, please batch your requests
     * @returns any Success
     * @throws ApiError
     */
    serverXpForUserCreateMany({ serverId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/servers/{serverId}/xp",
            path: {
                serverId: serverId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Bulk set members' XP
     * Take note of the max number of `userIds` that can be submitted on each request. If you require more, please batch your requests
     * @returns any Success
     * @throws ApiError
     */
    serverXpForUserUpdateMany({ serverId, requestBody, }) {
        return this.httpRequest.request({
            method: "PUT",
            url: "/servers/{serverId}/xp",
            path: {
                serverId: serverId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
    /**
     * Award XP to role
     * Award XP to all members with a particular role.
     * @returns void
     * @throws ApiError
     */
    serverXpForRoleCreate({ serverId, roleId, requestBody, }) {
        return this.httpRequest.request({
            method: "POST",
            url: "/servers/{serverId}/roles/{roleId}/xp",
            path: {
                serverId: serverId,
                roleId: roleId,
            },
            body: requestBody,
            mediaType: "application/json",
        });
    }
}
exports.ServerXpService = ServerXpService;
//# sourceMappingURL=ServerXpService.js.map